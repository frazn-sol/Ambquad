<% @client.projects.each do |project|%>
  <div id="edit_project_<%=project.id%>_form" class="popup" style="display:none;">
    <div class="popup_close"><img src="/assets/close.png"/ width="32"></div>
    <div class="page-header">
      <h3 class="popup_title"><%= "#{project.project_name} - Edit Project"%></h3>
    </div>
    <%= nested_form_for project, :url => update_project_admin_path(project), :html => {:class => 'form-horizontal', :multipart => true } do |f| %>
  <% project.errors.full_messages.each do |msg| %>
    <p><%= msg %></p>
  <% end %>
  <%= f.hidden_field :client_id, :class => 'text_field' %>
  <div class="control-group">
    <%= f.label :project_name, :class => 'control-label required' %>
    <div class="controls">
      <%= f.text_field :project_name, :class => 'text_field' %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :project_status, :class => 'control-label required' %>
    <div class="controls">
      <%= f.text_field :project_status, :class => 'text_field' %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :start_date, :class => 'control-label required' %>
    <div class="controls">
      <%= f.text_field :start_date, :class => 'datepicker text_field' %>
    </div>
  </div>

  <div class="control-group">
    <%= f.label :completion, :class => 'control-label required' %>
    <div class="controls">
      <%= f.text_field :completion_date, :class => 'datepicker text_field' %>
    </div>
  </div>
  
  <div class="control-group">
    <%= f.label :project_value, :class => 'control-label' %>
    <div class="controls">
      <%= f.text_field :project_value, :class => 'text_field' %>
    </div>
  </div>

    <div class="control-group">
    <label class="control-label">Address Autocomplete</label> 
    <div class="controls">
       <input class="text_field" id="autocomplete" placeholder="Enter your address" type="text"></input>
    </div>
  </div>

  <div class="control-group">
    <%= f.label :address1, :class => 'control-label required' %>
    <div class="controls">
      <%= f.text_field :address1, :class => 'text_field' %>
    </div>
  </div>

  <div class="control-group">
    <%= f.label :address2, :class => 'control-label' %>
    <div class="controls">
      <%= f.text_field :address2, :class => 'text_field' %>
    </div>
  </div>

  <div class="control-group">
    <%= f.label :city, :class => 'control-label required' %>
    <div class="controls">
      <%= f.text_field :city, :class => 'text_field' %>
    </div>
  </div>

  <div class="control-group">
    <%= f.label :state, :class => 'control-label required' %>
    <div class="controls">
      <%= f.text_field :state, :class => 'text_field' %>
    </div>
  </div>

  <div class="control-group">
    <%= f.label :country, :class => 'control-label required' %>
    <div class="controls">
      <%= f.text_field :country, :class => 'text_field' %>
    </div>
  </div>

  <div class="control-group">
    <%= f.label :client_name, :class => 'control-label required' %>
    <div class="controls">
      <%= f.text_field :client_name, :class => 'text_field' %>
    </div>
  </div>
    
  <div class="control-group">
    <%= f.label :description, :class => 'control-label' %>
    <div class="controls">
      <%= f.text_area :description, :class => 'text_field' %>
    </div>
  </div>
  <%= f.fields_for :images, project.images do |image|%>
    <div class="upload-thumbs aleft">
      <div class="remove">
        <%= image.link_to_remove "x" %>
      </div>  
      <div class="image aleft">
        <% if image.object.image.url.nil? %>
          <%= image_tag "/assets/placeholder.jpeg", :class => "thumb" %>
        <% else %>
           <%= image_tag image.object.image.url, :class => "thumb" %>
        <% end %> 
        <span class="btn btn-info upload">Choose File
          <%= image.file_field :image, :class => "project_image" %>
        </span>
      </div>    
    </div>  
  <% end %>     
  <div class="clear"></div> 
  <%= f.link_to_add "Upload Project image", :images, :class => "btn btn-primary", :style => "position: absolute;margin-top: -15px;" %>
  <div class="clear"></div> 
  <%= f.hidden_field :latitude, :class => 'text_field' %>
    <%= f.hidden_field :longitude, :class => 'text_field' %>
    <input type="hidden" class="text_field" id="locality" disabled="true"></input>
    <input type="hidden" class="text_field" id="administrative_area_level_1" disabled="true"></input>
    <input type="hidden" class="text_field" id="country" disabled="true"></input>
    <input type="hidden" class="text_field" id="route" disabled="true"></input>
    <input type="hidden" class="text_field" id="street_number" disabled="true"></input>
    
    <div style="text-align:center;margin-top:40px;">
      <%= f.submit nil, :class => 'btn btn-primary' %>
    </div>
	<% end %>
  </div>
<script>
  var placeSearch, autocomplete;
  var componentForm = {
    street_number: 'short_name',
    route: 'long_name',
    locality: 'long_name',
    administrative_area_level_1: 'short_name',
    country: 'long_name'
  };

  function initializeAutoComplete() {
    // Create the autocomplete object, restricting the search
    // to geographical location types.
    autocomplete = new google.maps.places.Autocomplete(
        /** @type {HTMLInputElement} */(document.getElementById('autocomplete')),
        { types: ['geocode'] });
    // When the project selects an address from the dropdown,
    // populate the address fields in the form.
    google.maps.event.addListener(autocomplete, 'place_changed', function() {
      fillInAddress();
    });
  }

  // The START and END in square brackets define a snippet for our documentation:
  // [START region_fillform]
  function fillInAddress() {
    // Get the place details from the autocomplete object.
    var place = autocomplete.getPlace();

    for (var component in componentForm) {
      document.getElementById(component).value = '';
      document.getElementById(component).disabled = false;
    }

    // Get each component of the address from the place details
    // and fill the corresponding field on the form.
    var address = "";
    for (var i = 0; i < place.address_components.length; i++) {
      var addressType = place.address_components[i].types[0];
      if (componentForm[addressType]) {
        var val = place.address_components[i][componentForm[addressType]];
        console.log(addressType);
        if (addressType == 'locality')
          $('#project_city').val(val);
        if (addressType == 'street_number')
          address += val;
        if (addressType == 'route')
          address += ' '+val;
        if (addressType == 'administrative_area_level_1')
          $('#project_state').val(val);
        if (addressType == 'country')
          $('#project_country').val(val);
      }
    }
    $('#project_address1').val(address);
    var latitude = place.geometry.location.lat();
    var longitude =  place.geometry.location.lng();
    $('#project_latitude').val(latitude);
    $('#project_longitude').val(longitude);
  }

  var image_element = "";
  var oFReader = new FileReader(), rFilter = /^(?:image\/bmp|image\/cis\-cod|image\/gif|image\/ief|image\/jpeg|image\/jpeg|image\/jpeg|image\/pipeg|image\/png|image\/svg\+xml|image\/tiff|image\/x\-cmu\-raster|image\/x\-cmx|image\/x\-icon|image\/x\-portable\-anymap|image\/x\-portable\-bitmap|image\/x\-portable\-graymap|image\/x\-portable\-pixmap|image\/x\-rgb|image\/x\-xbitmap|image\/x\-xpixmap|image\/x\-xwindowdump)$/i;

  oFReader.onload = function (oFREvent) {
       $(image_element).parent().parent().find('.thumb').attr("src",  oFREvent.target.result);
  };

  $(document).on('change','.project_image',(function(){
      if (document.getElementById($(this).attr("id")).files.length === 0) { return; }
      var oFile = document.getElementById($(this).attr("id")).files[0];
      if (!rFilter.test(oFile.type)) { alert("You must select a valid image file!"); return; }
      oFReader.readAsDataURL(oFile);
      image_element = "#"+$(this).attr("id");
  }));

  function loadImageFile() {
    if (document.getElementById("project_images_attributes_0_image").files.length === 0) { return; }
    var oFile = document.getElementById("project_images_attributes_0_image").files[0];
    if (!rFilter.test(oFile.type)) { alert("You must select a valid image file!"); return; }
    oFReader.readAsDataURL(oFile);
  }
</script>
<script>
  var validator = new FormValidator('edit_project_<%=project.id%>', [{
    name: 'project[project_name]',    
    rules: 'required'
  }, {
    name: 'project[project_status]',
    rules: 'required'
  }, {
    name: 'project[start_date]',
    rules: 'required'
  }, {
    name: 'project[completion_date]',
    rules: 'required'
  }, {
    name: 'project[client]',
    rules: 'required'
  }, {
    name: 'project[address1]',
    rules: 'required'
  }, {
    name: 'project[city]',
    rules: 'required'
  }, {
    name: 'project[state]',
    rules: 'required'
  }, {
    name: 'project[country]',
    rules: 'required'
  }, {
    name: 'project[client_name]',
    rules: 'required'
  }], function(errors, event) {
    $("input").each(function(){
        $(this).css("border","none");      
        $(this).removeClass("field_error");
    })
    if (errors.length > 0) {
      var obj;
      for (var i=0; i<errors.length; i++){
        obj = errors[i].id;
        $("#"+obj).addClass("field_error");
        $("#"+obj).css("border","1px solid red");
      }
      $("#"+errors[0].id).focus();
    }  
  });
  $(function() {
    $(".datepicker").datepicker({
      dateFormat: 'mm/dd/yy'
    });
  });
  // var html = "";
  // $('form').submit(function() {  
  //   if($(".field_error").length == 0){
  //     var valuesToSubmit = $(this).serialize();
  //     $.ajax({
  //         type:"POST",
  //         url: $(this).attr('action'), //sumbits it to the given url of the form
  //         data: valuesToSubmit,
  //         dataType: "JSON" // you want a difference between normal and ajax-calls, and json is standard
  //       }).success(function(json){
  //         location.href = window.location;
  //         //act on result.
  //       }).error(function(json){
  //         html = '<div id="form-errors"><p class="error-tagline">Following are missing fields in the form:</p>';
  //         $.each(json.responseJSON, function(key, value) { 
  //           html += '<p class="error">- '+value+'</p>'; 
  //         });
  //         html += "</div>"
  //         $("#form-errors").remove();
  //         $("form").prepend(html);
  //         $("#form-errors").attr("tabindex",-1).focus();
  //         //act on result.
  //       });
  //     return false; // prevents normal behaviour      
  //   }
  //   return false; // prevents normal behaviour      
  // });

</script>
<% end %>
