<%= form_for @client, :url => update_client_admin_path, :html => {:class => 'form-horizontal' } do |f| %>
  <% @client.errors.full_messages.each do |msg| %>
    <p><%= msg %></p>
  <% end %>
  <div class="control-group">
    <%= f.label :company_name, :class => 'control-label required' %>
    <div class="controls">
      <%= f.text_field :company_name, :class => 'text_field' %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :contact_person, :class => 'control-label required' %>
    <div class="controls">
      <%= f.text_field :contact_person, :class => 'text_field' %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :email, :class => 'control-label required' %>
    <div class="controls">
      <%= f.email_field :email, :class => 'text_field' %>
    </div>
  </div>

   <div id="address">
  <div class="control-group">
    <label class="control-label">Address Autocomplete</label> 
    <div class="controls">
       <input class="text_field" id="autocomplete" placeholder="Enter your address" type="text"></input>
    </div>
  </div>


  <div class="control-group">
    <%= f.label :address1, :class => 'control-label required' %>
    <div class="controls">
      <%= f.text_field :address1, :class => 'text_field' %>
    </div>
  </div>

  <div class="control-group">
    <%= f.label :address2, :class => 'control-label' %>
    <div class="controls">
      <%= f.text_field :address2, :class => 'text_field' %>
    </div>
  </div>

  <div class="control-group">
    <%= f.label :city, :class => 'control-label required' %>
    <div class="controls">
      <%= f.text_field :city, :class => 'text_field' %>
    </div>
  </div>

  <div class="control-group">
    <%= f.label :state, :class => 'control-label required' %>
    <div class="controls">
      <%= f.text_field :state, :class => 'text_field' %>
    </div>
  </div>


  <div class="control-group">
    <%= f.label :country, :class => 'control-label' %>
    <div class="controls">
      <%= f.text_field :country, :class => 'text_field' %>
    </div>
  </div>

</div>
  <div class="control-group">
    <%= f.label :website, :class => 'control-label required' %>
    <div class="controls">
      <%= f.text_field :website, :class => 'text_field' %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :title, :class => 'control-label required' %>
    <div class="controls">
      <%= f.text_field :title, :class => 'text_field' %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :slogan, :class => 'control-label required' %>
    <div class="controls">
      <%= f.text_field :slogan, :class => 'text_field' %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :phone_number, :class => 'control-label required' %>
    <div class="controls">
      <%= f.text_field :phone_number, :class => 'text_field' %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :description, :class => 'control-label' %>
    <div class="controls">
      <%= f.text_area :description, :class => 'text_field' %>
    </div>
  </div>


  <div class="control-group">
    <%= f.label :corporate_logo, :class => 'control-label' %>
    <div class="controls">
    <% if @client.logo_url.present? %>
      <%= image_tag @client.logo_url.to_s, :class => "thumb", :id => "upload" %>
    <% else %> 
      <img id="upload" src="#" alt="your image" class="thumb"/>
    <% end %> 
      <span class="btn btn-info upload">Choose File<%= f.file_field :logo, :class => '', :title => '' %></span>

    </div>
  </div>

  <div class="control-group">
    <%= f.label :unique_url, :class => 'control-label' %>
    <div class="controls">
      <input type="text" readonly class="text_field" value="<%= "#{ENV['HOST_URL']}" + "#{@client.slug}" %>"/>
    </div>
  </div>

    <%= f.hidden_field :latitude, :class => 'text_field' %>
    <%= f.hidden_field :longitude, :class => 'text_field' %>
   <input type="hidden" class="text_field" id="locality" disabled="true"></input>
    <input type="hidden" class="text_field" id="administrative_area_level_1" disabled="true"></input>
    <input type="hidden" class="text_field" id="country" disabled="true"></input>
    <input type="hidden" class="text_field" id="route" disabled="true"></input>
    <input type="hidden" class="text_field" id="street_number" disabled="true"></input>
  

  <div style="text-align:center;">
    <%= f.submit nil, :class => 'btn btn-primary' %>
  </div>
<% end %>
<script>
  var placeSearch, autocomplete;
  var componentForm = {
    street_number: 'short_name',
    route: 'long_name',
    locality: 'long_name',
    administrative_area_level_1: 'short_name',
    country: 'long_name'
  };

  function initialize() {
    // Create the autocomplete object, restricting the search
    // to geographical location types.
    autocomplete = new google.maps.places.Autocomplete(
        /** @type {HTMLInputElement} */(document.getElementById('autocomplete')),
        { types: ['geocode'] });
    // When the client selects an address from the dropdown,
    // populate the address fields in the form.
    google.maps.event.addListener(autocomplete, 'place_changed', function() {
      fillInAddress();
    });
  }

  // The START and END in square brackets define a snippet for our documentation:
  // [START region_fillform]
  function fillInAddress() {
    // Get the place details from the autocomplete object.
    var place = autocomplete.getPlace();

    for (var component in componentForm) {
      document.getElementById(component).value = '';
      document.getElementById(component).disabled = false;
    }

    // Get each component of the address from the place details
    // and fill the corresponding field on the form.
    var address = "";
    for (var i = 0; i < place.address_components.length; i++) {
      var addressType = place.address_components[i].types[0];
      if (componentForm[addressType]) {
        var val = place.address_components[i][componentForm[addressType]];
        if (addressType == 'locality')
          $('#client_city').val(val);
        if (addressType == 'street_number')
          address += val;
        if (addressType == 'route')
          address += ' '+val;
        if (addressType == 'administrative_area_level_1')
          $('#client_state').val(val);
        if (addressType == 'country')
           $('#client_country').val(val);
      }
    }
    $('#client_address1').val(address);
    var latitude = place.geometry.location.lat();
    var longitude =  place.geometry.location.lng();
    $('#client_latitude').val(latitude);
    $('#client_longitude').val(longitude);
  }
  $( document ).ready(function() {
    function readURL(input) {
    if (input.files && input.files[0]) {
      var reader = new FileReader();

      reader.onload = function (e) {
          $('#upload').attr('src', e.target.result);
      }

      reader.readAsDataURL(input.files[0]);
    }
  }

  $("#client_logo").change(function(){
      readURL(this);
  });
  });
  // [END region_fillform]
  window.onload = initialize;
</script>
<script>
  var validator = new FormValidator('new_client', [{
    name: 'client[company_name]',    
    rules: 'required'
  }, {
    name: 'client[contact_person]',
    rules: 'required'
  }, {
    name: 'client[title]',
    rules: 'required'
  }, {
    name: 'client[phone_number]',
    rules: 'required'
  }, {
    name: 'client[email]',
    rules: 'required'
  }], function(errors, event) {
    if (errors.length > 0) {
    var temp;
    for (var i=0; i<errors.length; i++){
      temp = errors[i].id;
      $("#" + temp).css("border","2px solid red");
    }
    }  
  });
</script>